package com.samilyak.notification.service;

import com.samilyak.notification.client.AuthClient;
import com.samilyak.notification.dto.NotificationDto;
import feign.FeignException;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;

@Slf4j
@Service
@RequiredArgsConstructor
public class NotificationService {

    private final TelegramNotificationService telegramNotificationService;
    private final AuthClient authClient;

    public void sendBookingNotification(Long userId, String phoneNumber, String message) {
        String username = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";

        try {
            username = authClient.getUsernameById(userId);
            log.info("‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", username);
        } catch (FeignException.NotFound e) {
            log.warn("‚ö† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id {} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ auth-service", userId);
        } catch (FeignException e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ auth-service: {}", e.getMessage());
        }

        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
        String formattedMessage = String.format(
                "üì¢ –ù–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ!\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: %s\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: %s\nüí¨ %s",
                username, phoneNumber, message
        );

        log.info("üì® –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram: {}", formattedMessage);
        telegramNotificationService.sendNotification(formattedMessage);
    }

    public void sendNotification(NotificationDto notificationDto) {
        sendBookingNotification(
                notificationDto.userId(),
                notificationDto.phoneNumber(),
                notificationDto.message()
        );
    }
}
